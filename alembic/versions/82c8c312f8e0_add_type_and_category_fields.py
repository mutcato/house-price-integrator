"""Add Type and Category fields

Revision ID: 82c8c312f8e0
Revises:
Create Date: 2023-04-03 23:48:27.489840

"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "82c8c312f8e0"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attributes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_attributes_id"), "attributes", ["id"], unique=False)
    op.create_index(op.f("ix_attributes_name"), "attributes", ["name"], unique=False)
    op.create_index(op.f("ix_attributes_value"), "attributes", ["value"], unique=False)
    op.create_table(
        "houses",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("internal_id", sa.Integer(), nullable=True),
        sa.Column("data_source", sa.String(), nullable=True),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("room", sa.SmallInteger(), nullable=True),
        sa.Column("living_room", sa.SmallInteger(), nullable=True),
        sa.Column("floor", sa.String(), nullable=True),
        sa.Column("total_floor", sa.Integer(), nullable=True),
        sa.Column("bathroom", sa.SmallInteger(), nullable=True),
        sa.Column("net_sqm", sa.Integer(), nullable=True),
        sa.Column("gross_sqm", sa.Integer(), nullable=True),
        sa.Column("balcony", sa.String(), nullable=True),
        sa.Column("heating", sa.String(), nullable=True),
        sa.Column("fuel", sa.String(), nullable=True),
        sa.Column("usage", sa.String(), nullable=True),
        sa.Column("credit", sa.String(), nullable=True),
        sa.Column("deposit", sa.String(), nullable=True),
        sa.Column("furnished", sa.String(), nullable=True),
        sa.Column("parking", sa.String(), nullable=True),
        sa.Column("version", sa.SmallInteger(), nullable=True),
        sa.Column("is_last_version", sa.Boolean(), nullable=True),
        sa.Column("latitude", sa.Numeric(), nullable=True),
        sa.Column("longitude", sa.Numeric(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("realty_type", sa.String(), nullable=True),
        sa.Column("currency", sa.String(), nullable=True),
        sa.Column("district", sa.String(), nullable=True),
        sa.Column("county", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column("predicted_price", sa.Integer(), nullable=True),
        sa.Column("predicted_rental_price", sa.Integer(), nullable=True),
        sa.Column("inserted_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("listing_category", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_houses_balcony"), "houses", ["balcony"], unique=False)
    op.create_index(op.f("ix_houses_city"), "houses", ["city"], unique=False)
    op.create_index(op.f("ix_houses_county"), "houses", ["county"], unique=False)
    op.create_index(
        op.f("ix_houses_created_at"), "houses", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_houses_credit"), "houses", ["credit"], unique=False)
    op.create_index(op.f("ix_houses_currency"), "houses", ["currency"], unique=False)
    op.create_index(
        op.f("ix_houses_data_source"), "houses", ["data_source"], unique=False
    )
    op.create_index(op.f("ix_houses_deposit"), "houses", ["deposit"], unique=False)
    op.create_index(op.f("ix_houses_district"), "houses", ["district"], unique=False)
    op.create_index(op.f("ix_houses_floor"), "houses", ["floor"], unique=False)
    op.create_index(op.f("ix_houses_fuel"), "houses", ["fuel"], unique=False)
    op.create_index(op.f("ix_houses_furnished"), "houses", ["furnished"], unique=False)
    op.create_index(op.f("ix_houses_gross_sqm"), "houses", ["gross_sqm"], unique=False)
    op.create_index(op.f("ix_houses_heating"), "houses", ["heating"], unique=False)
    op.create_index(op.f("ix_houses_id"), "houses", ["id"], unique=False)
    op.create_index(
        op.f("ix_houses_inserted_at"), "houses", ["inserted_at"], unique=False
    )
    op.create_index(
        op.f("ix_houses_internal_id"), "houses", ["internal_id"], unique=False
    )
    op.create_index(op.f("ix_houses_latitude"), "houses", ["latitude"], unique=False)
    op.create_index(
        op.f("ix_houses_listing_category"), "houses", ["listing_category"], unique=False
    )
    op.create_index(
        op.f("ix_houses_living_room"), "houses", ["living_room"], unique=False
    )
    op.create_index(op.f("ix_houses_longitude"), "houses", ["longitude"], unique=False)
    op.create_index(op.f("ix_houses_net_sqm"), "houses", ["net_sqm"], unique=False)
    op.create_index(op.f("ix_houses_parking"), "houses", ["parking"], unique=False)
    op.create_index(
        op.f("ix_houses_predicted_price"), "houses", ["predicted_price"], unique=False
    )
    op.create_index(
        op.f("ix_houses_predicted_rental_price"),
        "houses",
        ["predicted_rental_price"],
        unique=False,
    )
    op.create_index(op.f("ix_houses_price"), "houses", ["price"], unique=False)
    op.create_index(
        op.f("ix_houses_realty_type"), "houses", ["realty_type"], unique=False
    )
    op.create_index(op.f("ix_houses_room"), "houses", ["room"], unique=False)
    op.create_index(
        op.f("ix_houses_total_floor"), "houses", ["total_floor"], unique=False
    )
    op.create_index(
        op.f("ix_houses_updated_at"), "houses", ["updated_at"], unique=False
    )
    op.create_index(op.f("ix_houses_url"), "houses", ["url"], unique=True)
    op.create_index(op.f("ix_houses_usage"), "houses", ["usage"], unique=False)
    op.create_table(
        "house_attributes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("house_id", sa.Integer(), nullable=True),
        sa.Column("attribute_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["attribute_id"],
            ["attributes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["house_id"],
            ["houses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_house_attributes_id"), "house_attributes", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_house_attributes_id"), table_name="house_attributes")
    op.drop_table("house_attributes")
    op.drop_index(op.f("ix_houses_usage"), table_name="houses")
    op.drop_index(op.f("ix_houses_url"), table_name="houses")
    op.drop_index(op.f("ix_houses_updated_at"), table_name="houses")
    op.drop_index(op.f("ix_houses_total_floor"), table_name="houses")
    op.drop_index(op.f("ix_houses_room"), table_name="houses")
    op.drop_index(op.f("ix_houses_realty_type"), table_name="houses")
    op.drop_index(op.f("ix_houses_price"), table_name="houses")
    op.drop_index(op.f("ix_houses_predicted_rental_price"), table_name="houses")
    op.drop_index(op.f("ix_houses_predicted_price"), table_name="houses")
    op.drop_index(op.f("ix_houses_parking"), table_name="houses")
    op.drop_index(op.f("ix_houses_net_sqm"), table_name="houses")
    op.drop_index(op.f("ix_houses_longitude"), table_name="houses")
    op.drop_index(op.f("ix_houses_living_room"), table_name="houses")
    op.drop_index(op.f("ix_houses_listing_category"), table_name="houses")
    op.drop_index(op.f("ix_houses_latitude"), table_name="houses")
    op.drop_index(op.f("ix_houses_internal_id"), table_name="houses")
    op.drop_index(op.f("ix_houses_inserted_at"), table_name="houses")
    op.drop_index(op.f("ix_houses_id"), table_name="houses")
    op.drop_index(op.f("ix_houses_heating"), table_name="houses")
    op.drop_index(op.f("ix_houses_gross_sqm"), table_name="houses")
    op.drop_index(op.f("ix_houses_furnished"), table_name="houses")
    op.drop_index(op.f("ix_houses_fuel"), table_name="houses")
    op.drop_index(op.f("ix_houses_floor"), table_name="houses")
    op.drop_index(op.f("ix_houses_district"), table_name="houses")
    op.drop_index(op.f("ix_houses_deposit"), table_name="houses")
    op.drop_index(op.f("ix_houses_data_source"), table_name="houses")
    op.drop_index(op.f("ix_houses_currency"), table_name="houses")
    op.drop_index(op.f("ix_houses_credit"), table_name="houses")
    op.drop_index(op.f("ix_houses_created_at"), table_name="houses")
    op.drop_index(op.f("ix_houses_county"), table_name="houses")
    op.drop_index(op.f("ix_houses_city"), table_name="houses")
    op.drop_index(op.f("ix_houses_balcony"), table_name="houses")
    op.drop_table("houses")
    op.drop_index(op.f("ix_attributes_value"), table_name="attributes")
    op.drop_index(op.f("ix_attributes_name"), table_name="attributes")
    op.drop_index(op.f("ix_attributes_id"), table_name="attributes")
    op.drop_table("attributes")
    # ### end Alembic commands ###
